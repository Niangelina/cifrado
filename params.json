{"name":"Cifrado","tagline":"OpenStack Swift CLI with encryption support","body":"# Cifrado\r\n\r\n**WARNING** \r\n\r\nThe current Cifrado release is experimental. Use at your own risk.\r\n\r\nOpenStack Swift CLI with built in (GPG) encryption.\r\n\r\nThere's an **ongoing** effort to document Cifrado in the Wiki. Additional details such as\r\ndocumentation to bootstrap your own Swift All-In-One server with Cifrado and the demo\r\nserver available are documented there.\r\n\r\nSee [Cifrado Demo Server](https://github.com/rubiojr/cifrado/wiki/Cifrado-Demo-Server) and [Cifrado SAIO Bootstrap](Cifrado SAIO bootstrap).\r\n\r\n## Features available in Cifrado 0.1\r\n\r\n* Uploading/downloading files and directories to/from OpenStack Swift.\r\n* Regular list/delete/stat commands to manipulate objects and containers.\r\n* Asymmetric/Symmetric transparent encryption/decryption of files\r\n  when uploading/downloading using GnuPG.\r\n* Segmented uploads (splitting the file in multiple segments).\r\n* Resume (unencrypted) segmented uploads. Segments already uploaded\r\n  are not uploaded again. This feature does not work when using\r\n  file encryption at the moment.\r\n* Different progressbar styles. CLI does not have to be boring :).\r\n* Bandwidth limits when uploading/downloading stuff.\r\n* Music streaming (streams mp3/ogg files available in a container)\r\n  and plays them using mplayer/vlc/totem if available.\r\n* Video streaming (streams video files available in a container).\r\n* Bootstrap a Swift All-In-One server in a cloud provider\r\n  (DigitalOcean is the only one supported ATM).\r\n* Ruby 1.8.7, 1.9.X and 2.0 compatibility.\r\n\r\nCifrado has a built-in help command:\r\n\r\n```\r\n$ cifrado help\r\n\r\nTasks:\r\n  cifrado cinema CONTAINER VIDEO              # Stream videos from the target container\r\n  cifrado delete CONTAINER [OBJECT]           # Delete specific container or object\r\n  cifrado download [CONTAINER] [OBJECT]       # Download container, objects\r\n  cifrado help [TASK]                         # Describe available tasks or one specifi...\r\n  cifrado jukebox CONTAINER                   # Play music randomly from the target con...\r\n  cifrado list [CONTAINER]                    # List containers and objects\r\n  cifrado post CONTAINER [DESCRIPTION]        # Create a container\r\n  cifrado saio SUBCOMMAND ...ARGS             # Bootstrap a Swift installation\r\n  cifrado set-acl CONTAINER --acl=ACL         # Set an ACL on containers and objects\r\n  cifrado setup                               # Initial Cifrado configuration\r\n  cifrado stat [CONTAINER] [OBJECT]           # Displays information for the account, c...\r\n  cifrado upload CONTAINER FILE1 [FILE2] ...  # Upload files or directories\r\n\r\nOptions:\r\n  [--username=USERNAME]  \r\n  [--quiet=QUIET]        \r\n  [--password=PASSWORD]  \r\n  [--auth-url=AUTH_URL]  \r\n  [--tenant=TENANT]      \r\n  [--config=CONFIG]      \r\n  [--region=REGION]      \r\n  [--insecure]           # Insecure SSL connections\r\n  [--debug]              \r\n```\r\n\r\n## Installation\r\n\r\n### Installing the Ubuntu packages (recommended)\r\n\r\nUbuntu packages are available in Cifrado's PPA for Ubuntu\r\nPrecise (12.04), Quantal (12.10) and Raring Ringtail (13.04).\r\n\r\nTo add the PPA and install the packages, open a terminal and type:\r\n\r\n```\r\nsudo add-apt-repository ppa:rubiojr/cifrado\r\nsudo apt-get update\r\nsudo apt-get install cifrado\r\n```\r\n\r\nYou'll also need GnuPG and MPlayer installed if you want to have\r\nmusic streaming and encryption support enabled in Cifrado\r\n(GnuPG and the agent is pre-installed in a regular Ubuntu \r\ninstallation):\r\n\r\n    sudo apt-get install mplayer gnupg gnupg-agent\r\n\r\n### Installing via rubygems\r\n\r\nNeeds rubygems and ruby available in your system.\r\n\r\nUbuntu installation:\r\n\r\n    sudo apt-get install ruby rubygems\r\n\r\nInstall the gem:\r\n\r\n    sudo gem install cifrado\r\n\r\n## Basic usage\r\n\r\n### Setting up Cifrado for the first time\r\n\r\nIf you already have a Swift installation running,\r\nyou can use 'cifrado setup' to configure Cifrado for the first time.\r\n\r\nThe setup process is optional but highly recommended.\r\nIf you run setup, you won't be asked for the username,\r\npassword, auth_url and other parameters required to run Cifrado.\r\n\r\nThe setup command will ask you for the OpenStack Swift authentication\r\nparameters:\r\n\r\n    $ cifrado setup\r\n    Running cifrado setup...\r\n    Please provide OpenStack/Rackspace credentials.\r\n    \r\n    Cifrado can save this settings in /home/rubiojr/.config/cifrado/cifradorc\r\n    for later use.\r\n    The settings (password included) are saved unencrypted.\r\n    \r\n    Username: user\r\n    Tenant: my_tenant\r\n    Password: \r\n    Auth URL: https://identity.example.net/v2.0/tokens\r\n    Do you want to save these settings? (y/n)  \r\n\r\nThere's an alternative way to setup Cifrado and provision a Swift All-In-One\r\nserver for testing and/or personal use. Head over to the Wiki for more\r\ndetails.\r\n\r\n### Uploading/Downloading files with Cifrado\r\n\r\n#### Uploading files\r\n\r\nUploading a single file, LICENSE.txt, to container 'test':\r\n\r\n```\r\n$ cifrado upload test LICENSE.txt\r\n\r\nUploading LICENSE.txt (1.04 KB)\r\n[0.00 Mb/s] Progress: |=====================| 100% [Time: 00:00:02 ]\r\n```\r\n\r\nUploading a directory (recursively) to container 'test':\r\n\r\n```\r\n$ cifrado upload test tmp\r\n\r\nUploading tmp/LICENSE.txt (1.04 KB)\r\n [0.00 Mb/s] Progress: |=====================| 100% [Time: 00:00:02 ]\r\nUploading tmp/cifrado.gemspec (1.14 KB)\r\n [0.00 Mb/s] Progress: |=====================| 100% [Time: 00:00:02 ]\r\n```\r\n\r\nLimiting upload speed with --bwlimit:\r\n\r\n```\r\n$ cifrado upload --bwlimit 0.10 test pkg/cifrado-0.1.gem\r\n\r\nUploading pkg/cifrado-0.1.gem (163.00 KB)\r\n [0.09 Mb/s] Progress: |=====================| 100% [Time: 00:00:14 ]\r\n```\r\n\r\nThe bwlimit data rate unit is Mb/s. The same --bwlimit option can\r\nbe used when downloading files.\r\n\r\nUploading big files using segments:\r\n\r\n```\r\n$ cifrado upload --segments 3 test pkg/cifrado-0.1.gem \r\nSegmenting file, 3 segments...\r\nUploading cifrado-0.1.gem segments\r\nUploading segment 1/3 (56.00 KB)\r\n [0.00 Mb/s] Segment [1/3]: |================| 100% [Time: 00:00:02 ]\r\nUploading segment 2/3 (56.00 KB)\r\n [0.00 Mb/s] Segment [2/3]: |================| 100% [Time: 00:00:02 ]\r\nUploading segment 3/3 (51.00 KB)\r\n [0.00 Mb/s] Segment [3/3]: |================| 100% [Time: 00:00:03 ]\r\n```\r\n\r\nNote that segments are automatically reassembled by Swift when you\r\ndownload the object. That is, to download cifrado-0.1.gem from the\r\ntest container, download it like any other regular object.\r\n\r\n#### Downloading files\r\n\r\n#### Encryption support\r\n\r\n**Symmetric Encryption**\r\n\r\n    cifrado upload --insecure \\\r\n                   --encrypt symmetric \\\r\n                   my-container audio.mp3\r\n\r\nCifrado will ask you for the password.\r\n\r\nYou could also specify the password as an argument (not recommended):\r\n\r\n    cifrado upload --insecure \\\r\n                   --encrypt s:foobar \\\r\n                   my-container audio.mp3\r\n\r\n**Asymmetric Encryption ('Traditional' GPG encryption)**\r\n\r\n    cifrado upload --insecure \\\r\n                   --encrypt a:rubiojr@frameos.org \\\r\n                   my-container audio.mp3\r\n\r\nOr using the key ID:\r\n\r\n    cifrado upload --insecure \\\r\n                   --encrypt a:F345BE74 \\\r\n                   my-container audio.mp3\r\n\r\n#### Streaming the music available in a container\r\n\r\nNeeds mplayer installed:\r\n\r\n    sudo apt-get install mplayer\r\n\r\nPlay the files available in the 'music' container:\r\n\r\n```\r\n$ cifrado jukebox music\r\n\r\nCifrado Jukebox\r\n---------------\r\n\r\nCtrl-C once   -> next song\r\nCtrl-C twice  -> quit\r\n\r\nPlaying song\r\n  * spotify/Los Lobos/La Bamba.ogg\r\n```\r\n\r\n## Advanced usage\r\n\r\nThere's some extra documentation available in the project's wiki.\r\n\r\nHead over to https://github.com/rubiojr/cifrado/wiki to learn about\r\nCifrado.\r\n\r\n## Known issues\r\n\r\n* Foo\r\n* Bar\r\n* A lot of them\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}